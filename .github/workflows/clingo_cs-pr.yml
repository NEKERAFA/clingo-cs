name: clingo-cs Pull Request

on:
  pull_request:
    branches:
      - develop 

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
      - name: Build clingo.dll
        run: .\build.ps1
      - name: Upload clingo.dll
        uses: actions/upload-artifact@v2
        with:
          name: clingo.dll
          path: clingo\build\win\bin\Release\clingo.dll

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
      - name: Build libclingo.so
        run:  ./build.sh
      - name: Upload libclingo.so
        uses: actions/upload-artifact@v2
        with:
          name: libclingo.so
          path: clingo/build/linux/bin/libclingo.so.4.0

  build:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Download clingo.dll
        uses: actions/download-artifact@v2
        with:
          name: clingo.dll
      - name: Download libclingo.so
        uses: actions/download-artifact@v2
        with:
          name: libclingo.so
      - name: Installing clingo dependencies
        run: |
          mkdir -p 'clingo/build/linux/bin' && mv 'libclingo.so.4.0' 'clingo/build/linux/bin/libclingo.so'
          mkdir -p 'clingo/build/win/bin/Release' && mv 'clingo.dll' 'clingo/build/win/bin/Release/clingo.dll'
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: ./tests.sh
      - name: Reporting coverage result
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.info
      - name: Uploading Clingo_cs package
        uses: actions/upload-artifact@v2
        with:
          name: Clingo_cs.debug.nupkg
          path: src/Clingo_cs/bin/Release/Clingo_cs.*.nupkg
      - name: Uploading Clingo_c package
        uses: actions/upload-artifact@v2
        with:
          name: Clingo_c.debug.nupkg
          path: src/Clingo_c/bin/Release/Clingo_c.*.nupkg
      - name: Clean Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            libclingo.so
            clingo.dll

