name: ClingoSharp Publish

on:
  push:
    branches: 
      - master

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
      - name: Build clingo.dll
        run: .\build.ps1
      - name: Upload clingo.dll
        uses: actions/upload-artifact@v2
        with:
          name: clingo.dll
          path: clingo\build\win\bin\Release\clingo.dll

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
      - name: Build libclingo.so
        run:  ./build.sh
      - name: Upload libclingo.so
        uses: actions/upload-artifact@v2
        with:
          name: libclingo.so
          path: clingo/build/linux/bin/libclingo.so.4.0

  build:
    needs: [build-windows, build-linux]
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Download clingo.dll
        uses: actions/download-artifact@v2
        with:
          name: clingo.dll
      - name: Download libclingo.so
        uses: actions/download-artifact@v2
        with:
          name: libclingo.so
      - name: Installing clingo dependencies
        run: |
          New-Item 'clingo\build\win\bin\Release' -ItemType directory
          Copy-Item -Path 'clingo.dll' -Destination 'clingo\build\win\bin\Release\clingo.dll' -Recurse
          New-Item 'clingo\build\linux\bin' -ItemType directory
          Copy-Item -Path 'libclingo.so.4.0' -Destination 'clingo\build\linux\bin' -Recurse
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: .\test.ps1
      - name: Setup DocFX
        run: choco install docfx -y
      - name: Building documentation
        run: |
          docfx .\docfx.json
          if ($lastexitcode -ne 0){
            throw [System.Exception] "docfx build failed with exit code $lastexitcode."
          }
      - name: Reporting coverage result
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.info
      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: site
          path: _site
      - name: Uploading ClingoSharp package
        uses: actions/upload-artifact@v2
        with:
          name: ClingoSharp.debug.nupkg
          path: src/ClingoSharp/bin/Release/ClingoSharp.*.nupkg
      - name: Uploading ClingoSharp.Native package
        uses: actions/upload-artifact@v2
        with:
          name: ClingoSharp.Native.debug.nupkg
          path: src/ClingoSharp.Native/bin/Release/ClingoSharp.Native.*.nupkg
      - name: Clean Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            libclingo.so
            clingo.dll

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download Artifacts # The built project is downloaded into the 'site' folder.
        uses: actions/download-artifact@v2
        with:
          name: site
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: "site" # The deployment folder should match the name of the artifact. Even though our project builds into the 'build' folder the artifact name of 'site' must be placed here.
      - name: Clean Artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: site
